#include <stdio.h>
#include <cstdlib>
#include <ctime>
using namespace std;

class Process{

private:
    int rank; // Generated by MPI
    bool active; // Is Process active or passive
    int id;
    bool init;
    void computeID(int size){
        int* idList;
        idList = new int[size];
        for(int i =0; i<size; i++){
            idList[i] = rand()%(size*100);
        }
        id = idList[rank];
        init = true;
    }

public:
    // Default Constructor
    Process(int rk, int size){
        init = false;
        srand(time(0));
        rank =rk;
        active = true;
        computeID(size);
    }

    // Simple functions for accessing private variables
    int getRank(){
        return rank;
    }
    int getID(){
        return id;
    }
    bool finishedInit(){
        return init;   
    }
    bool isActive(){
        return active;
    }
    void setActive(bool status){
        active = status;
    }
};